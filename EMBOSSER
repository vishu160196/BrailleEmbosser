
; Braille Embosser

jmp main

;data
MEMORY_START_ADD: EQU 0000H
RAM_START_ADD: EQU 8000H
MEMORY_END_ADD: EQU 81FFH
CWR: EQU 00H
PORTA: EQU 01H ; OUTPUT PORT
PORTB: EQU 02H ; INPUT PORT
PORTC: EQU 03H ; PIN EMBOSSING PORT
PORT_LCD: EQU

BRAILLE_CODES: 

;code
main: XRA A
LXI B, 00FFH
LXI H, RAM_START_ADD
LXI SP, MEMORY_END_ADD

WHILE_LOOP_CONDITION: CPI 28H ; COMPARE CONTENT OF A WITH KEYCODE OF ENTER
JNZ WHILE_LOOP
MOV A, C
CPI 0FFH
JNZ WHILE_LOOP
JMP MAIN

WHILE_LOOP: CALL KYBORD
CPI 27H ; KEYCODE OF BACKSPACE
JNZ ELSE_IF
MOV A, C
CPI 0FFH
JZ WHILE_LOOP_CONDITION
DCR C
JMP WHILE_LOOP_CONDITION

ELSE_IF: CPI 28H
JNZ ELSE
MOV A, C
CPI 0FFH
JZ MAIN
CALL EMBOSS
JMP WHILE_LOOP_CONDITION

ELSE: INX B
LXI H, RAM_START_ADD
DAD B
MOV M, A
OUT PORT_LCD
JMP WHILE_LOOP_CONDITION

EMBOSS: PUSH PSW
PUSH B
PUSH D
PUSH H
MVI D, 00H
LOOP: LXI H, RAM_START_ADD
DAD D
MOV A, M
CALL HEX_TO_BRAILLE
OUT PORTC
DCR C
INR D
MOV A, C
CPI 0FFH
JNZ LOOP
POP H
POP D
POP B
POP PSW
RET

HEX_TO_BRAILLE: 

hlt