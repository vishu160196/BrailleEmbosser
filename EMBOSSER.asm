
; Braille Embosser

JMP MAIN

;data
MEMORY_START_ADD: EQU 0000H
RAM_START_ADD: EQU 8000H
MEMORY_END_ADD: EQU 81FFH
CWR: EQU 80H
PORTA: EQU 82H ; OUTPUT PORT
PORTB: EQU 84H ; INPUT PORT
PORTC: EQU 86H ; PIN EMBOSSING PORT
COUNT: EQU 0342H
PORT_LCD_DATA: EQU 83H
PORT_LCD_CONTROL: EQU 85H

; MAP KBINPUT TO BRAILLE OUTPUT
CASEA: MVI A, 20H
RET
CASEB: MVI A, 28H
RET
CASEC: MVI A, 30H
RET
CASED: MVI A, 34H
RET
CASEE: MVI A, 24H
RET
CASEF: MVI A, 38H
RET
CASEG: MVI A, 3CH
RET
CASEH: MVI A, 2CH
RET
CASEI: MVI A, 18H
RET
CASEJ: MVI A, 1CH
RET
CASEK: MVI A, 22H
RET
CASEL: MVI A, 2AH
RET
CASEM: MVI A, 32H
RET
CASEN: MVI A, 36H
RET
CASEO: MVI A, 26H
RET
CASEP: MVI A, 3AH
RET
CASEQ: MVI A, 3EH
RET
CASER: MVI A, 2EH
RET
CASES: MVI A, 1AH
RET
CASET: MVI A, 1EH
RET
CASEU: MVI A, 23H
RET
CASEV: MVI A, 2BH
RET
CASEW: MVI A, 1DH
RET
CASEX: MVI A, 33H
RET
CASEY: MVI A, 37H
RET
CASEZ: MVI A, 27H
RET
CASE0: MVI A, 07H
RET
CASE1: MVI A, 08H
RET
CASE2: MVI A, 0AH
RET
CASE3: MVI A, 0CH
RET
CASE4: MVI A, 0DH
RET
CASE5: MVI A, 09H
RET
CASE6: MVI A, 0EH
RET
CASE7: MVI A, 0FH
RET
CASE8: MVI A, 0BH
RET
CASE9: MVI A, 06H
RET
CASESPACE: MVI A, 00H
RET
CASEPERIOD: MVI A, 11H
RET
CASECOMMA: MVI A, 01H
RET

; MAP KBINPUT TO ASCII VALUE

;code
MAIN: XRA A
LXI B, 00FFH
LXI H, RAM_START_ADD
LXI SP, MEMORY_END_ADD
; CODE FOR SETTING UP LCD


WHILE_LOOP_CONDITION: CPI 28H ; COMPARE CONTENT OF A WITH KEYCODE OF ENTER
JNZ WHILE_LOOP
MOV A, C
CPI 0FFH
JNZ WHILE_LOOP
JMP MAIN

WHILE_LOOP: CALL KYBORD
CPI 27H ; KEYCODE OF BACKSPACE
JNZ ELSE_IF
MOV A, C
CPI 0FFH
JZ WHILE_LOOP_CONDITION
DCR C
;REMOVE FROM LCD
JMP WHILE_LOOP_CONDITION

ELSE_IF: CPI 28H
JNZ ELSE
MOV A, C
CPI 0FFH
JZ MAIN
CALL EMBOSS
JMP WHILE_LOOP_CONDITION

ELSE: INX B
LXI H, RAM_START_ADD
DAD B
MOV M, A
OUT PORT_LCD
JMP WHILE_LOOP_CONDITION

EMBOSS: PUSH PSW
PUSH D
PUSH H
MVI D, 00H
LOOP: LXI H, RAM_START_ADD
DAD D
MOV A, M
CALL HEX_TO_BRAILLE
OUT PORTC
DCR C
INR D
MOV A, C
CPI 0FFH
JNZ LOOP
POP H
POP D
POP PSW
RET

HEX_TO_BRAILLE: CPI 00H
CZ CASEA
RZ
CPI 01H
CZ CASEB
RZ
CPI 02H
CZ CASEC
RZ
CPI 03H
CZ CASED
RZ
CPI 04H
CZ CASEE
RZ
CPI 05H
CZ CASEF
RZ
CPI 06H
CZ CASEG
RZ
CPI 07H
CZ CASEH
RZ
CPI 08H
CZ CASEI
RZ
CPI 09H
CZ CASEJ
RZ
CPI 0AH
CZ CASEK
RZ
CPI 0BH
CZ CASEL
RZ
CPI 0CH
CZ CASEM
RZ
CPI 0DH
CZ CASEN
RZ
CPI 0FH
CZ CASEO
RZ
CPI 10H
CZ CASEP
RZ
CPI 11H
CZ CASEQ
RZ
CPI 12H
CZ CASER
RZ
CPI 13H
CZ CASES
RZ
CPI 14H
CZ CASET
RZ
CPI 15H
CZ CASEU
RZ
CPI 16H
CZ CASEV
RZ
CPI 17H
CZ CASEW
RZ
CPI 18H
CZ CASEX
RZ
CPI 19H
CZ CASEZ
RZ
CPI 1AH
CZ CASE0
RZ
CPI 1BH
CZ CASE1
RZ
CPI 1CH
CZ CASE2
RZ
CPI 1DH
CZ CASE3
RZ
CPI 1EH
CZ CASE4
RZ
CPI 1FH
CZ CASE5
RZ
CPI 20H
CZ CASE6
RZ
CPI 21H
CZ CASE7
RZ
CPI 22H
CZ CASE8
RZ
CPI 23H
CZ CASE9
RZ
CPI 24H
CZ CASECOMMA
RZ
CPI 25H
CZ CASEPERIOD
RZ
CPI 26H
CZ CASESPACE
RZ

KYBORD: PUSH B
PUSH D
XRA A
MOV E, A
OUT PORTA

KYREL: IN PORTB
ANI 01111111B
CPI 01111111B
JNZ KYREL

CALL DBONCE

KYCHK: IN PORTB
ANI 01111111B
CPI 01111111B

JZ KYCHK
CALL DBONCE

MVI A, 7FH
MVI B, 06H

NXTROW: RLC
MOV D, A
OUT PORTA
IN PORTB
ANI 01111111B
MVI C, 07H

NXTCOL: RAR
JNC CODE
INR E
DCR C
JNZ NXTCOL
MOV A, D
DCR B
JNZ NXTROW
JMP KYCHK

CODE: MOV A, E
POP D
POP B
RET

DBONCE: PUSH B
PUSH PSW
LXI B, COUNT
LOOPDBONCE: DCX B
MOV A, C
ORA B
JNZ LOOPDBONCE
POP PSW
POP B
RET

hlt